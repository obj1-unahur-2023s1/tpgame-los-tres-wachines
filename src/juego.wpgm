import wollok.game.*
import jugador.*
import obstaculos.*
import tiposDeObstaculos.*
import hud.*
import sonidos.*
import habitaciones.*

program juego {
	
	game.title("Escapa de la Mansion")
	game.height(18)
	game.width(28)
	game.boardGround("pisoBase.png")
	game.addVisual(bordeNegro)
	
	var estaEnCartelFinal = false
	
	const pasilloPrincipal = new Habitacion(nombre = "pasillo")
	const caja1 = new CajaMadera(position = game.center())
	const pinche1 = new Trampa(position = new Position(x=9,y=8))
	const cartelFinal = new CartelMuerte()
	
	var habitacionActual = pasilloPrincipal
	var posDeAlexEnPasillo
	
	(1..16).forEach({posY =>
		var id = 0
		pasilloPrincipal.agregarVisual(new Pared(position = new Position(x=6,y=posY),image = "paredIzq.png"))
		pasilloPrincipal.agregarVisual(new Pared(position = new Position(x=21,y=posY),image = "paredDer.png"))
		if(posY%4==0 and posY<16){
			pasilloPrincipal.agregarVisual(new Puerta(position = new Position(x=6,y=posY),image = "puertaCostadoIzq.png", id = id))
			pasilloPrincipal.agregarVisual(new Puerta(position = new Position(x=21,y=posY),image = "puertaCostadoDer.png", id = id+3))
			id++
		}
	})
	pasilloPrincipal.mostrarVisuales()
	cantidadVida.texto(alex.getVidas())
		
	game.addVisual(pinche1)
	game.addVisual(alex)
	game.addVisual(caja1)
	game.addVisual(cantidadVida)
	game.addVisual(visualVida)
	
	game.onCollideDo(alex, {o => 
		if(alex.colisionCon_DeTipo_(o, objetoPeligroso)){
			o.image("pincheAbierto.png")
			alex.movimientoPermitido(false)
			ouh.play()
			game.schedule(300, {
				alex.recibirDanio()
			})
			game.schedule(600, {
				alex.movimientoPermitido(true)
				alex.visualPersonaje(false)
				if(alex.getVidas() == 0){
					estaEnCartelFinal = true
					habitacionActual.esconderVisuales()
					game.addVisual(cartelFinal)
				}
				o.image("pincheCerrado.png")	
			})
			cantidadVida.actualizar(alex)
			//---colision con puerta---
		}else if(alex.colisionCon_DeTipo_(o, puerta)){
			habitacionActual.esconderVisuales()
			if(o.id().between(0,2)){
				posDeAlexEnPasillo = o.position().right(1)
				bordeNegro.image("NegroSalaHab"+alex.vistaActual()+".png")
				(1..16).forEach({posY =>
					if(posY != 9){
						game.addVisual(new Pared(position = new Position(x=26,y=posY),image = "paredDer.png"))
					}
				})
				game.addVisual(new Puerta(position = new Position(x=26,y=9),image = "puertaCostadoIzqAbierta2.png", id = 0))
				game.addVisual(new Decoracion(position = new Position(x=25,y=9),image = "puertaCuartoIzqNoOBJETO.png"))
				alex.position(game.at(25,9))
			}else if(o.id().between(3,5)){
				posDeAlexEnPasillo = o.position().left(1)
				bordeNegro.image("NegroSalaHab"+alex.vistaActual()+".png")
				(1..16).forEach({posY =>
					if(posY != 9){
						game.addVisual(new Pared(position = new Position(x=1,y=posY),image = "paredIzq.png"))
					}
				})
				game.addVisual(new Puerta(position = new Position(x=1,y=9),image = "puertaCostadoDerAbierta2.png", id = 0))
				alex.position(game.at(2,9))
			}else{
				bordeNegro.image("bordeNegroPasillo.png")
				alex.position(posJugadorEnPasillo)
				game.addVisual(m1)
				(1..16).forEach({posY =>
					var id = 1
					game.addVisual(new Pared(position = new Position(x=6,y=posY),image = "paredIzq.png"))
					game.addVisual(new Pared(position = new Position(x=21,y=posY),image = "paredDer.png"))
					if(posY%4==0 and posY<16){
						game.addVisual(new Puerta(position = new Position(x=6,y=posY),image = "puertaCostadoIzq.png", id = id))
						game.addVisual(new Puerta(position = new Position(x=21,y=posY),image = "puertaCostadoDer.png", id = id+3))
						id++
					}
				})
			}
			cantidadVida.texto(alex.getVidas())
			game.addVisual(cantidadVida)
			game.addVisual(visualVida)
			game.addVisual(alex)
		}
//		else if(o.tipo() == fragmentoDeLLave){
//			fragmentosConseguidos++
//		}
	})
	
	keyboard.r().onPressDo({
		if(estaEnCartelFinal){
			game.removeVisual(crtlMrt)
			alex.position(game.center())
			alex.setVidas(3)
			cantidadVida.texto(alex.getVidas())
			game.addVisual(cantidadVida)
			game.addVisual(visualVida)
			game.addVisual(m1)
			(1..16).forEach({posY =>
				var id = 1
				game.addVisual(new Pared(position = new Position(x=6,y=posY),image = "paredIzq.png"))
				game.addVisual(new Pared(position = new Position(x=21,y=posY),image = "paredDer.png"))
				if(posY%4==0 and posY<16){
					game.addVisual(new Puerta(position = new Position(x=6,y=posY),image = "puertaCostadoIzq.png", id = id))
					game.addVisual(new Puerta(position = new Position(x=21,y=posY),image = "puertaCostadoDer.png", id = id+3))
					id++
				}
			})
			game.addVisual(alex)
			estaEnCartelFinal = false
//			game.boardGround("piso-pasillo-1.png")
		}
	})
	
	keyboard.t().onPressDo({
		if(estaEnCartelFinal){
			game.stop()
		}
	})

	
	keyboard.w().onPressDo({alex.moverArriba()})
	keyboard.a().onPressDo({alex.moverIzquierda()})
	keyboard.s().onPressDo({alex.moverAbajo()})
	keyboard.d().onPressDo({alex.moverDerecha()})
	
	keyboard.e().onPressDo({
		if(!estaEnCartelFinal and alex.movimientoPermitido()){
			if(alex.cajaEncima() == null and game.colliders(alex).any({o=>o.tipo() == objetoMovible})){
				alex.cajaEncima(game.colliders(alex).first())
				game.removeVisual(caja1)
				alex.image("player"+alex.vistaActual()+"Caja.png")
			} else if(alex.cajaEncima() != null){
				alex.cajaEncima(null)
				game.addVisual(caja1)
				alex.image("player"+alex.vistaActual()+".png")
			}
		} 
		if(alex.hayObstaculo_Adelante(puerta)){
			var posPuerta
			if(alex.vistaActual() == "Der"){	
				posPuerta = new Position(x = alex.position().x()+1 , y = alex.position().y())
			}else if(alex.vistaActual() == "Izq"){
				posPuerta = new Position(x = alex.position().x()-1 , y = alex.position().y())
			}
			var puertaAdelante = game.getObjectsIn(posPuerta).find({o => o.tipo() == puerta})
			puertaAdelante.image("puertaCostado"+alex.vistaActual()+"Abierta.png")
			var bloquesSolidos = game.getObjectsIn(posPuerta).filter({o => o.tipo() == bloqueSolido})
			bloquesSolidos.forEach({bs => game.removeVisual(bs)})
		}
	})

	
	game.addVisual(new BolaPlasma(image = "bolaPlasma.png",position = game.at(10,10)))
	
	game.start()
}